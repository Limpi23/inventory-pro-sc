import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import useCompanySettings from '../hooks/useCompanySettings';
import { useCurrency } from '../hooks/useCurrency';
const PrintableOrder = ({ order, orderItems, format, formatCurrency, formatDate }) => {
    const { settings } = useCompanySettings();
    const { settings: currencySettings } = useCurrency();
    // Calcular totales
    const totalReceived = orderItems.reduce((sum, item) => sum + (item.received_quantity || 0), 0);
    const totalOrdered = orderItems.reduce((sum, item) => sum + item.quantity, 0);
    const progressPercentage = totalOrdered > 0 ? Math.round((totalReceived / totalOrdered) * 100) : 0;
    // Renderizar formato carta
    if (format === 'letter') {
        return (_jsxs("div", { className: "w-full max-w-[216mm] mx-auto bg-white p-10 font-sans", children: [_jsxs("div", { className: "flex justify-between items-start mb-8", children: [_jsxs("div", { children: [_jsxs("div", { className: "mb-3", children: [_jsx("h1", { className: "text-xl font-bold", children: settings.name }), _jsxs("p", { className: "text-sm", children: ["NIT: ", settings.taxId] }), _jsx("p", { className: "text-sm", children: settings.address }), _jsxs("p", { className: "text-sm", children: ["Tel: ", settings.phone] }), settings.email && _jsx("p", { className: "text-sm", children: settings.email }), settings.website && _jsx("p", { className: "text-sm", children: settings.website })] }), _jsxs("h2", { className: "text-2xl font-bold mb-1", children: ["Orden de Compra #", order.id.substring(0, 8)] }), _jsxs("p", { className: "text-gray-600 mb-2", children: ["Fecha: ", formatDate(order.order_date)] })] }), _jsxs("div", { className: "text-right", children: [_jsx("div", { className: "mb-1", children: _jsx("span", { className: "inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800", children: order.status === 'borrador' ? 'Borrador' :
                                            order.status === 'enviada' ? 'Enviada' :
                                                order.status === 'recibida_parcialmente' ? 'Recibida Parcialmente' :
                                                    order.status === 'completada' ? 'Completada' : 'Cancelada' }) }), _jsxs("p", { className: "text-sm", children: ["ID: ", order.id] })] })] }), _jsxs("div", { className: "grid grid-cols-2 gap-8 mb-8", children: [_jsxs("div", { className: "border border-gray-200 rounded-md p-4", children: [_jsx("h2", { className: "text-sm font-semibold text-gray-500 mb-1", children: "Informaci\u00F3n del Proveedor" }), _jsxs("p", { className: "text-base", children: [_jsx("strong", { children: "Nombre:" }), " ", order.supplier?.name ?? ''] }), order.supplier?.contact_name && (_jsxs("p", { className: "text-base", children: [_jsx("strong", { children: "Contacto:" }), " ", order.supplier.contact_name] })), order.supplier?.phone && (_jsxs("p", { className: "text-base", children: [_jsx("strong", { children: "Tel\u00E9fono:" }), " ", order.supplier.phone] })), order.supplier?.email && (_jsxs("p", { className: "text-base", children: [_jsx("strong", { children: "Email:" }), " ", order.supplier.email] })), order.supplier?.address && (_jsxs("p", { className: "text-base", children: [_jsx("strong", { children: "Direcci\u00F3n:" }), " ", order.supplier.address] }))] }), _jsxs("div", { className: "border border-gray-200 rounded-md p-4", children: [_jsx("h2", { className: "text-sm font-semibold text-gray-500 mb-1", children: "Almac\u00E9n de Destino" }), _jsxs("p", { className: "text-base", children: [_jsx("strong", { children: "Nombre:" }), " ", order.warehouse?.name ?? ''] }), order.warehouse?.location && (_jsxs("p", { className: "text-base", children: [_jsx("strong", { children: "Ubicaci\u00F3n:" }), " ", order.warehouse.location] })), ['recibida_parcialmente', 'completada'].includes(order.status) && (_jsxs("div", { className: "mt-4", children: [_jsxs("p", { className: "text-sm font-semibold text-gray-500 mb-1", children: ["Progreso de recepci\u00F3n: ", progressPercentage, "%"] }), _jsx("div", { className: "w-full bg-gray-200 rounded-full h-2 mt-1", children: _jsx("div", { className: "bg-green-500 h-2 rounded-full", style: { width: `${progressPercentage}%` } }) })] }))] })] }), _jsxs("table", { className: "w-full border-collapse mb-8", children: [_jsx("thead", { className: "bg-gray-100 text-left", children: _jsxs("tr", { children: [_jsx("th", { className: "px-4 py-2 text-sm font-semibold text-gray-600", children: "Producto" }), _jsx("th", { className: "px-4 py-2 text-sm font-semibold text-gray-600", children: "Cantidad" }), _jsx("th", { className: "px-4 py-2 text-sm font-semibold text-gray-600", children: "Precio Unitario" }), _jsx("th", { className: "px-4 py-2 text-sm font-semibold text-gray-600", children: "Total" }), ['recibida_parcialmente', 'completada'].includes(order.status) && (_jsx("th", { className: "px-4 py-2 text-sm font-semibold text-gray-600", children: "Recibidos" }))] }) }), _jsxs("tbody", { children: [orderItems.map((item) => (_jsxs("tr", { className: "border-b border-gray-200", children: [_jsxs("td", { className: "px-4 py-2", children: [_jsx("div", { className: "font-medium", children: item.product?.name ?? '' }), _jsxs("div", { className: "text-xs text-gray-500", children: ["SKU: ", item.product?.sku ?? ''] })] }), _jsx("td", { className: "px-4 py-2", children: item.quantity }), _jsx("td", { className: "px-4 py-2", children: formatCurrency(item.unit_price ?? 0) }), _jsx("td", { className: "px-4 py-2", children: formatCurrency(item.total_price ?? 0) }), ['recibida_parcialmente', 'completada'].includes(order.status) && (_jsx("td", { className: "px-4 py-2", children: _jsxs("span", { className: item.received_quantity === item.quantity ? 'text-green-600' : 'text-yellow-600', children: [item.received_quantity || 0, " / ", item.quantity] }) }))] }, item.id))), _jsxs("tr", { className: "bg-gray-50", children: [_jsx("td", { colSpan: 3, className: "px-4 py-2 text-right font-medium", children: "Total:" }), _jsx("td", { className: "px-4 py-2 font-bold", children: formatCurrency(order.total_amount ?? 0) }), ['recibida_parcialmente', 'completada'].includes(order.status) && _jsx("td", {})] })] })] }), _jsx("div", { className: "border-t border-gray-200 pt-4 mt-8", children: _jsxs("div", { className: "grid grid-cols-3 gap-4", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm font-semibold mb-10", children: "Elaborado por:" }), _jsx("div", { className: "border-t border-gray-400 w-40" }), _jsx("p", { className: "text-sm mt-1", children: "Firma" })] }), _jsxs("div", { children: [_jsx("p", { className: "text-sm font-semibold mb-10", children: "Autorizado por:" }), _jsx("div", { className: "border-t border-gray-400 w-40" }), _jsx("p", { className: "text-sm mt-1", children: "Firma" })] }), _jsxs("div", { children: [_jsx("p", { className: "text-sm font-semibold mb-10", children: "Recibido por:" }), _jsx("div", { className: "border-t border-gray-400 w-40" }), _jsx("p", { className: "text-sm mt-1", children: "Firma" })] })] }) }), _jsxs("div", { className: "text-center text-sm text-gray-500 mt-8", children: [_jsx("p", { children: "Este documento es un comprobante de recepci\u00F3n de mercanc\u00EDa" }), _jsx("p", { children: settings.footerText }), _jsxs("p", { children: ["Generado el ", new Date().toLocaleDateString(currencySettings.locale), " a las ", new Date().toLocaleTimeString(currencySettings.locale)] })] })] }));
    }
    // Renderizar formato rollo (ticket)
    return (_jsxs("div", { className: "w-full max-w-[80mm] mx-auto bg-white p-4 font-sans", children: [_jsxs("div", { className: "text-center mb-4", children: [_jsx("h1", { className: "text-lg font-bold mb-1", children: settings.name.toUpperCase() }), _jsxs("p", { className: "text-xs", children: ["NIT: ", settings.taxId] }), _jsx("p", { className: "text-xs", children: settings.address }), _jsxs("p", { className: "text-xs", children: ["Tel: ", settings.phone] }), _jsx("hr", { className: "my-2" }), _jsx("h2", { className: "text-base font-bold", children: "ORDEN DE COMPRA" }), _jsxs("p", { className: "text-xs mb-1", children: ["#", order.id.substring(0, 8)] }), _jsxs("p", { className: "text-xs mb-1", children: ["Fecha: ", formatDate(order.order_date)] })] }), _jsxs("div", { className: "mb-4", children: [_jsxs("p", { className: "text-xs mb-1", children: [_jsx("span", { className: "font-semibold", children: "Estado: " }), order.status === 'borrador' ? 'Borrador' :
                                order.status === 'enviada' ? 'Enviada' :
                                    order.status === 'recibida_parcialmente' ? 'Recibida Parcialmente' :
                                        order.status === 'completada' ? 'Completada' : 'Cancelada'] }), _jsxs("p", { className: "text-xs mb-1", children: [_jsx("span", { className: "font-semibold", children: "Proveedor: " }), order.supplier?.name ?? ''] }), _jsxs("p", { className: "text-xs mb-1", children: [_jsx("span", { className: "font-semibold", children: "Almac\u00E9n: " }), order.warehouse?.name ?? ''] }), ['recibida_parcialmente', 'completada'].includes(order.status) && (_jsxs("p", { className: "text-xs mb-1", children: [_jsx("span", { className: "font-semibold", children: "Progreso: " }), progressPercentage, "%"] }))] }), _jsxs("table", { className: "w-full text-xs mb-4", children: [_jsx("thead", { className: "border-t border-b border-gray-200", children: _jsxs("tr", { children: [_jsx("th", { className: "py-1 text-xs font-semibold", style: { width: '50%', textAlign: 'left' }, children: "Producto" }), _jsx("th", { className: "py-1 text-xs font-semibold", style: { width: '15%', textAlign: 'center' }, children: "Cant" }), _jsx("th", { className: "py-1 text-xs font-semibold", style: { width: '35%', textAlign: 'right' }, children: "Total" })] }) }), _jsx("tbody", { children: orderItems.map((item) => (_jsxs("tr", { className: "border-b border-gray-200", children: [_jsxs("td", { className: "py-1", style: { textAlign: 'left' }, children: [item.product?.name ?? '', _jsx("br", {}), _jsxs("span", { className: "text-[10px]", children: ["SKU: ", item.product?.sku ?? ''] })] }), _jsxs("td", { className: "py-1", style: { textAlign: 'center' }, children: [item.quantity, ['recibida_parcialmente', 'completada'].includes(order.status) && (_jsxs(_Fragment, { children: [_jsx("br", {}), _jsxs("span", { className: "text-[10px]", children: ["Rec: ", item.received_quantity || 0] })] }))] }), _jsx("td", { className: "py-1", style: { textAlign: 'right' }, children: formatCurrency(item.total_price ?? 0) })] }, item.id))) })] }), _jsx("div", { style: { borderTop: '1px dashed #ccc', marginTop: '8px', paddingTop: '8px' }, children: _jsxs("p", { className: "text-xs mb-1", style: { textAlign: 'right' }, children: [_jsx("span", { className: "font-semibold", children: "Total: " }), formatCurrency(order.total_amount ?? 0)] }) }), ['recibida_parcialmente', 'completada'].includes(order.status) && (_jsx("div", { style: { marginTop: '8px' }, children: _jsxs("p", { className: "text-xs mb-1", style: { textAlign: 'center' }, children: [_jsx("span", { className: "font-semibold", children: "Art\u00EDculos Recibidos: " }), totalReceived, " de ", totalOrdered] }) })), _jsxs("div", { className: "text-center text-xs mt-4 border-t border-gray-200 pt-2", children: [_jsx("p", { children: settings.footerText }), _jsxs("p", { children: [new Date().toLocaleDateString(currencySettings.locale), " ", new Date().toLocaleTimeString(currencySettings.locale)] })] })] }));
};
export default PrintableOrder;
